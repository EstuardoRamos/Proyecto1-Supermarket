/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_supermarket.Vistas.administrador;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import project_supermarket.Vistas.entidades.Cliente;
import project_supermarket.Vistas.entidades.Estanteria;
import project_supermarket.Vistas.entidades.Producto;
import project_supermarket.Vistas.entidades.Sucursal;
import project_supermarket.Vistas.entidades.Venta;
import project_supermarket.controlers.ClienteDatos;
import project_supermarket.controlers.ProductoDatos;
import project_supermarket.controlers.VentaDatos;

/**
 *
 * @author Estuardo Ramos
 */
public class ReportesFrame extends javax.swing.JPanel {

    /**
     * Creates new form ReportesFrame
     */
    VentaDatos vd= new VentaDatos();
    public ReportesFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        topVentasBtn = new javax.swing.JButton();
        topSucursalesBtn = new javax.swing.JButton();
        topProdBtn = new javax.swing.JButton();
        topClientesBtn = new javax.swing.JButton();
        topDescuentos = new javax.swing.JButton();

        jLabel1.setText("Reportes");

        topVentasBtn.setText("Top 10 ventas mas grandes");
        topVentasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topVentasBtnActionPerformed(evt);
            }
        });

        topSucursalesBtn.setText("Top de sucursales con dinero ingresado");
        topSucursalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topSucursalesBtnActionPerformed(evt);
            }
        });

        topProdBtn.setText("Top 10 productos mas vendidos");
        topProdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topProdBtnActionPerformed(evt);
            }
        });

        topClientesBtn.setText("Top 10  clientes  que mas han gastado");
        topClientesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topClientesBtnActionPerformed(evt);
            }
        });

        topDescuentos.setText("Top de descuentos");
        topDescuentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topDescuentosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topClientesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(topProdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(topSucursalesBtn)
                    .addComponent(topVentasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(topDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(topDescuentos)
                .addGap(18, 18, 18)
                .addComponent(topVentasBtn)
                .addGap(18, 18, 18)
                .addComponent(topSucursalesBtn)
                .addGap(18, 18, 18)
                .addComponent(topProdBtn)
                .addGap(18, 18, 18)
                .addComponent(topClientesBtn)
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void topVentasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topVentasBtnActionPerformed
        // TODO add your handling code here:
            ArrayList<Venta> topVentas= new ArrayList<>();
            
            topVentas=vd.listarTopventas();
            modeloVenta(topVentas);
           
    }//GEN-LAST:event_topVentasBtnActionPerformed

    private void topProdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topProdBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Producto> topProductos= new ArrayList<>();
        ProductoDatos pd= new ProductoDatos();
        topProductos=pd.listarTopProductosVendidos();
        modeloProducto(topProductos);
        
    }//GEN-LAST:event_topProdBtnActionPerformed

    private void topClientesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topClientesBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Cliente> topClientes= new ArrayList<>();
        ClienteDatos cd= new ClienteDatos();
        topClientes= cd.listarTopClientes();
        modeloCliente(topClientes);
    }//GEN-LAST:event_topClientesBtnActionPerformed

    private void topDescuentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topDescuentosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topDescuentosActionPerformed

    private void topSucursalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topSucursalesBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Sucursal> topSucursales= new ArrayList<>();
        topSucursales=vd.listarTopSucursales();
        modeloSucursal(topSucursales);
        
    }//GEN-LAST:event_topSucursalesBtnActionPerformed
    public DefaultTableModel modeloVenta(ArrayList<Venta> topVentas){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Id Venta");
        modelo.addColumn("Fecha");
        modelo.addColumn("Total de la venta");

        for (Venta venta : topVentas) {
            String[] data = new String[6];
            data[0] = String.valueOf(venta.getId_venta());
            data[1] = String.valueOf(venta.getFecha());
            data[2] = String.valueOf(venta.getTotal_con_descuento());
            modelo.addRow(data);
        }
        ReporteIndividualFrame r= new ReporteIndividualFrame(modelo, "Top 10 ventas más grandes");
        r.setVisible(true);
        return modelo;
        //tablaEstanterias.setModel(modelo);
    
    }
    
    public DefaultTableModel modeloSucursal(ArrayList<Sucursal> topSucursal){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre Sucursal");
        modelo.addColumn("Dinero Obtenido");
        //modelo.addColumn("Total de la venta");

        for (Sucursal venta : topSucursal) {
            String[] data = new String[6];
            data[0] = String.valueOf(venta.getNombre());
            data[1] = String.valueOf(venta.getDineroObtenido());
            System.out.println("name "+venta.getNombre()+venta.getDineroObtenido());
            //data[2] = String.valueOf(venta.getTotal_con_descuento());
            modelo.addRow(data);
        }
        ReporteIndividualFrame r= new ReporteIndividualFrame(modelo,"Top 3 sucursales que más dinero han ingresado.");
        r.setVisible(true);
        return modelo;
        //tablaEstanterias.setModel(modelo);
    
    }
    
    public DefaultTableModel modeloProducto(ArrayList<Producto> topProducto){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre producto");
        modelo.addColumn("Cantidad de veces vendido");
        //modelo.addColumn("Total de la venta");

        for (Producto producto : topProducto) {
            String[] data = new String[6];
            System.out.println("Producto "+producto.getNombre()+producto.getCantidad());
            data[0] = String.valueOf(producto.getNombre());
            data[1] = String.valueOf(producto.getCantidad());
            //data[2] = String.valueOf(venta.getTotal_con_descuento());
            modelo.addRow(data);
        }
        ReporteIndividualFrame r= new ReporteIndividualFrame(modelo, "Top 10 artículos más vendidos.");
        r.setVisible(true);
        return modelo;
        
        //tablaEstanterias.setModel(modelo);
    
    }
    
    public DefaultTableModel modeloCliente(ArrayList<Cliente> topCliente){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre producto");
        modelo.addColumn("Cantidad de veces vendido");
        //modelo.addColumn("Total de la venta");

        for (Cliente cliente : topCliente) {
            String[] data = new String[6];
            data[0] = String.valueOf(cliente.getNit());
            data[1] = String.valueOf(cliente.getNombre());
            data[1] = String.valueOf(cliente.getDinero_gastado());
            modelo.addRow(data);
        }
        ReporteIndividualFrame r= new ReporteIndividualFrame(modelo, "Top 10 clientes que más dinero han gastado");
        r.setVisible(true);
        return modelo;
        
        //tablaEstanterias.setModel(modelo);
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton topClientesBtn;
    private javax.swing.JButton topDescuentos;
    private javax.swing.JButton topProdBtn;
    private javax.swing.JButton topSucursalesBtn;
    private javax.swing.JButton topVentasBtn;
    // End of variables declaration//GEN-END:variables
}
